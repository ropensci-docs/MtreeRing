[{"path":"https://docs.ropensci.org/MtreeRing/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/MtreeRing/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jingning Shi. Author, maintainer. Wei Xiang. Author.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shi J, Xiang W (2024). MtreeRing: Shiny Application Automatic Measurements Tree-Ring Widths Digital Images. R package version 1.4.5, https://github.com/ropensci/MtreeRing, https://docs.ropensci.org/MtreeRing.","code":"@Manual{,   title = {MtreeRing: A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images},   author = {Jingning Shi and Wei Xiang},   year = {2024},   note = {R package version 1.4.5, https://github.com/ropensci/MtreeRing},   url = {https://docs.ropensci.org/MtreeRing}, }"},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"mtreering","dir":"","previous_headings":"","what":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"Authors: Jingning Shi, Wei XiangLicense: GPL3  MtreeRing tool automatically measuring tree-ring width using image processing techniques.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"Install stable version CRAN development version GitHub","code":"install.packages(\"MtreeRing\") # install.packages(\"devtools\") devtools::install_github(\"ropensci/MtreeRing\")"},{"path":[]},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"1-read-an-image","dir":"","previous_headings":"Ring-width measurement","what":"1. Read an image","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"ring_read supports commonly used image formats, including png, tiff, jpg bmp.","code":"library(MtreeRing) ## Read and plot a tree ring image img.name <- system.file(\"001.png\", package = \"MtreeRing\") t1 <- ring_read(img = img.name, dpi = 1200, plot = TRUE)"},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"2-detect-ring-borders","dir":"","previous_headings":"Ring-width measurement","what":"2. Detect ring borders","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"plotting image, automatic detection ring borders can performed using three alternative methods: (1) watershed algorithm; (2) Canny edge detector; (3) linear detection algorithm R package measuRing.","code":"## Split a long core sample into 2 pieces to ## get better display performance and use the ## watershed algorithm to detect ring borders: t2 <- ring_detect(ring.data = t1, seg = 2, method = 'watershed')"},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"3-calculate-ring-width-series","dir":"","previous_headings":"Ring-width measurement","what":"3. Calculate ring-width series","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"ring borders correctly identified, can generate ring-width series data frame format. Use write.rwl export ring-width series rwl file.","code":"rw.df <- ring_calculate(ring.data = t2, seriesID = \"940220\") library(dplR) # A dendrochronological analysis package fn <- tempfile(fileext=\".rwl\") write.rwl(rwl.df = rw.df, fname = fn, format = \"tucson\")"},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"shiny-application","dir":"","previous_headings":"","what":"Shiny application","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"familiar R command line interface, shiny-based app good alternative. command allows run Shiny-based application within system’s default web browser. app provides beginner-friendly graphical interface supports flexible mouse-based interactions, allowing image files uploaded 150 MB size. dashboard three components: header, sidebar body, like  workflow Shiny app can found https://ropensci.github.io/MtreeRing/articles/app-MtreeRing.html. steps demonstrated gif make workflow understandable.","code":"MtreeRing::ring_app_launch()"},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"ring-width-correction","dir":"","previous_headings":"","what":"Ring width correction","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"increment borer used extract samples, well known auger sometimes fails traverse pith sampled tree passes one side pith certain distance. Tangent lines rings close pith therefore perpendicular horizontal path, may lead considerable errors ring widths. conditions, can create two paths setting argument incline = TRUE, ticking checkbox Inclined tree rings. See example.  line segment connecting two dots ring match tangent tree ring border. corrected ring width estimated distance adjacent rings orientation ring borders.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"feedback, bug reports suggestions welcomed. comment MtreeRing, find bug released beta versions, please submit bugs /feature requests https://github.com/ropensci/MtreeRing/issues. Include package version, OS, command-line required reproduce problem.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths on Digital Images","text":"try add new features based user feedback. hoped others contribute additional useful features. Please note ‘MtreeRing’ project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/MtreeRing-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A Shiny Application for Automatic Measurements of Tree-Ring Widths \non Digital Images — MtreeRing-package","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths \non Digital Images — MtreeRing-package","text":"Use morphological image processing edge detection algorithms  automatically measure tree ring widths digital images. Users can also  manually mark tree rings species complex anatomical structures.  arcs inner-rings angles successive inclined ring boundaries  used correct ring-width series. package provides Shiny-based  application, allowing R beginners easily analyze tree ring images  export ring-width series standard file formats.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/MtreeRing/reference/MtreeRing-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Shiny Application for Automatic Measurements of Tree-Ring Widths \non Digital Images — MtreeRing-package","text":"Jingning Shi, Wei Xiang","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate ring-width series — pith_measure","title":"Calibrate ring-width series — pith_measure","text":"function can calibrate ring-width series  using arcs inner rings.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate ring-width series — pith_measure","text":"","code":"pith_measure(ring.data, inner.arc = TRUE, last.yr = NULL,   color = \"black\", border.type = 16, label.cex = 1.5)"},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate ring-width series — pith_measure","text":"ring.data magick image object produced ring_read. inner.arc logical value indicating whether calibrate  ring-width series using arcs inner rings. See details . last.yr NULL integer giving year formation  left-ring. NULL, border numbers (starting 1)  used instead years. color Color labels. border.type Symbol ring borders. See pch  points possible values shapes. label.cex magnification used years border numbers.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate ring-width series — pith_measure","text":"data frame calibrated ring-width series. measurements  units millimeters (mm)","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calibrate ring-width series — pith_measure","text":"function allows user create path, manually mark  ring borders clicking graphical window. example demonstrated pictures can found package vignette.  Type vignette('pith-MtreeRing') see example. inner.arc = TRUE, ring-width series calibrated using arcs  inner rings (Duncan, 1989). Step1. can click left mouse button add horizontal path. path traverse appropriate arc (read reference   details). Step2. can add three points selected arc left-clicking. first point placed left endpoint  arc, second point placed right endpoint. adding two points, vertical dashed line plotted  automatically according (x,y) positions endpoints just added.  third points placed intersection vertical  dashed line selected arc. Step3. prompted mark tree rings along path  left-clicking image. Every click draws point. Note left endpoint arc considered last  ring border without need mark . marking tree rings, identification process automatically  stop . Windows platform, identification process  can terminated clicking second button selecting Stop  menu. MacOS system, can press Escape key  terminate process. ring-width series corrected using formulas proposed Duncan (1989). inner.arc = FALSE, user can create path matches  direction wood growth. Step1. can add two points left-clicking image.  Every click draws point. path passing two points plotted. path  follow rays bark pith. Step2. can mark tree rings along path left-clicking image. termination identification process similar.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calibrate ring-width series — pith_measure","text":"Duncan R. (1989)  evaluation errors tree age estimates based increment cores  Kahikatea (Dacrycarpus dacrydiodes). New Zealand Natural Sciences 16(4), 1-37.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calibrate ring-width series — pith_measure","text":"Jingning Shi","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/pith_measure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate ring-width series — pith_measure","text":"","code":"img.path <- system.file(\"missing_pith.png\", package = \"MtreeRing\")  ## Read the image: t1 <- ring_read(img = img.path, dpi = 1200, plot = FALSE)  ## Use the arcs of inner rings to calibrate ring-width series: t2 <- pith_measure(t1, inner.arc = TRUE, last.yr = 2016) #> Error in round(step1$y): non-numeric argument to mathematical function  ## Try another method to measure ring widths: t3 <- pith_measure(t1, inner.arc = FALSE, last.yr = 2016) #> Error in model.frame.default(formula = path.position$y ~ path.position$x +     1, drop.unused.levels = TRUE): invalid type (NULL) for variable 'path.position$y'"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_app_launch.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Shiny-based Application — ring_app_launch","title":"Run Shiny-based Application — ring_app_launch","text":"Run Shiny-based application within system's default  web browser.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_app_launch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Shiny-based Application — ring_app_launch","text":"","code":"ring_app_launch(launch.browser = TRUE)"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_app_launch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Shiny-based Application — ring_app_launch","text":"launch.browser logical value.  FALSE, built-browser launched automatically  app started. TRUE, system's default  web browser used instead. argument works RStudio. See details .","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_app_launch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Shiny-based Application — ring_app_launch","text":"launch.browser = FALSE recommended, file renaming work RStudio built-browser saving data. workflow Shiny app can found : https://ropensci.github.io/MtreeRing/articles/app-MtreeRing.html.  steps demonstrated gif make workflow understandable. stop app, go R console press Escape key.  can also click stop sign icon upper right corner RStudio console.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_app_launch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Shiny-based Application — ring_app_launch","text":"Jingning Shi, Wei Xiang","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ring-width series — ring_calculate","title":"Generate a ring-width series — ring_calculate","text":"function can calculate ring widths according  coordinates detected ring borders.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ring-width series — ring_calculate","text":"","code":"ring_calculate(ring.data, seriesID)"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ring-width series — ring_calculate","text":"ring.data matrix array produced ring_detect  ring_modify. seriesID character string specifying column name  ring-width series.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_calculate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a ring-width series — ring_calculate","text":"data frame. series ID column name  years row names. measurements units millimeters (mm).","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_calculate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a ring-width series — ring_calculate","text":"Jingning Shi","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_calculate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a ring-width series — ring_calculate","text":"","code":"img.path <- system.file(\"001.png\", package = \"MtreeRing\")  ## Read a tree ring image: t1 <- ring_read(img = img.path, dpi = 1200)  ## Split a long core sample into 3 pieces to ## get better display performance and use the ## watershed algorithm to detect ring borders: t2 <- ring_detect(ring.data = t1, seg = 3, method = 'watershed') #> Warning: The sampling year is set to the current year  ## Calculate ring widths from the attribute list of t2: rw.df <- ring_calculate(ring.data = t2, seriesID = \"940220\")"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic detection of tree-ring borders — ring_detect","title":"Automatic detection of tree-ring borders — ring_detect","text":"function used automatically detect tree ring  borders along user-defined path.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic detection of tree-ring borders — ring_detect","text":"","code":"ring_detect(ring.data, seg = 1, auto.path = TRUE, manual = FALSE,   method = \"canny\", incline = FALSE, sample.yr = NULL,   watershed.threshold = \"auto\", watershed.adjust = 0.8,   struc.ele1 = NULL, struc.ele2 = NULL, marker.correction = FALSE,   default.canny = TRUE, canny.t1, canny.t2, canny.smoothing = 2,   canny.adjust = 1.4, path.dis = 1, origin = 0,   border.color = \"black\", border.type = 16, label.color = \"black\",   label.cex = 1.2)"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic detection of tree-ring borders — ring_detect","text":"ring.data magick image object produced ring_read. seg integer specifying number image segments. auto.path logical value. TRUE, path automatically  created center image. FALSE, function allows  user create sub-image path interactive clickings.  See details . manual logical value indicating whether skip automatic  detection. TRUE, ring borders visually identified  creating path. See ring_modify learn mark tree rings clicking image. method character string specifying ring borders detected.  requires one following characters: \"watershed\",  \"canny\", \"lineardetect\". See details . incline logical value indicating whether correct ring widths.  TRUE, two horizontal paths added image. sample.yr NULL integer giving year formation  left-ring. NULL, use current year. watershed.threshold threshold used producing marker  image, either numeric 0 1, character \"auto\" (using  Otsu algorithm), character form \"XX%\" (e.g., \"58%\"). watershed.adjust numeric used adjust Otsu threshold.  default 1 means threshold adjusted.  sizes early-wood regions marker image reduce along  decrease watershed.adjust. struc.ele1 NULL vector length two specifying  width height first structuring element. NULL,  size structuring element determined argument dpi. struc.ele2 NULL vector length two specifying  width height second structuring element. NULL,  size structuring element determined argument dpi. marker.correction logical value indicating whether relabel  early-wood regions comparing values left-side neighbours. default.canny logical value. TRUE, upper lower  Canny thresholds determined automatically. canny.t1 numeric giving threshold weak edges. canny.t2 numeric giving threshold strong edges. canny.smoothing integer specifying degree smoothing. canny.adjust numeric used sensitivity control factor  Canny edge detector. default 1 means sensitivity  adjusted. number detected borders reduce along  increase value. path.dis numeric specifying perpendicular distance  two paths argument incline = TRUE. unit mm. origin numeric specifying origin smoothed gray find  ring borders. See ringBorders package  measuRing. border.color Color ring borders. border.type Symbol ring borders. See pch  points possible values shapes. label.color Color years border numbers. label.cex magnification used years border numbers.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic detection of tree-ring borders — ring_detect","text":"matrix (grayscale image) array (color image)  representing tree-ring image.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatic detection of tree-ring borders — ring_detect","text":"auto.path = FALSE, user can create rectangular sub-image  horizontal path interactively clicking tree ring image.  automatic detection performed within rectangular  sub-image.  create sub-image path, follow steps. Step 1. Select left right edges rectangle user can point mouse    desired locations click left mouse button add edge. Step 2. Select top bottom edges rectangle user can point mouse desired locations click    left mouse button add edge. width rectangle    defined distance top bottom edges,    unnecessarily large reduce time consumption memory usage.    Creating long narrow rectangle possible. Step 3. Create path creating rectangular sub-image, user can add horizontal    path left-clicking sub-image (generally center    sub-image, try choose clean defect-free area). Ring borders    markers plotted along path. incline = TRUE,    two paths added simultaneously. creating sub-image path, function open several  graphics windows plot detected ring borders image segments.  number image segments controlled argument seg. Argument method determines ring borders identified. method = \"watershed\", function uses watershed algorithm    obtain ring borders (Soille Misson, 2001). method = \"canny\", function uses Canny algorithm    detect borders. method = \"lineardetect\", linear detection algorithm    package measuRing used identify ring borders (Lara    et al., 2015). Note incline = TRUE supported    mode, path automatically created center image. argument method = \"watershed\" \"canny\", original  image processed morphological openings closings using rectangular  structuring elements increasing size detecting borders. first  small structuring element used remove smaller dark spots early  wood regions, second large structuring element used remove  light strips late wood regions. details morphological  processing can found Soille Misson (2001).","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Automatic detection of tree-ring borders — ring_detect","text":"function uses locator record mouse  positions works \"X11\", \"windows\" \"quartz\" devices.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automatic detection of tree-ring borders — ring_detect","text":"Soille, P., Misson, L. (2001) Tree ring area measurements using morphological image analysis. Canadian Journal Forest Research 31, 1074-1083. doi: 10.1139/cjfr-31-6-1074 Lara, W., Bravo, F., Sierra, C.. (2015) measuRing: R package measure tree-ring widths scanned images. Dendrochronologia 34, 43-50. doi: 10.1016/j.dendro.2015.04.002","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatic detection of tree-ring borders — ring_detect","text":"Jingning Shi","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic detection of tree-ring borders — ring_detect","text":"","code":"img.path <- system.file(\"001.png\", package = \"MtreeRing\")  ## Read a tree ring image: t1 <- ring_read(img = img.path, dpi = 1200, plot = FALSE)  ## Split a long core sample into 3 pieces to ## get better display performance and use the ## watershed algorithm to detect ring borders: t2 <- ring_detect(t1, seg = 3, method = 'watershed', border.color = 'green') #> Warning: The sampling year is set to the current year"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_modify.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit ring borders visually — ring_modify","title":"Edit ring borders visually — ring_modify","text":"function can remove existing ring borders  add new borders.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit ring borders visually — ring_modify","text":"","code":"ring_modify(ring.data, del = NULL, del.u = NULL, del.l = NULL,   add = FALSE)"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit ring borders visually — ring_modify","text":"ring.data matrix array produced ring_detect. del numeric vector giving border numbers removed. del.u numeric vector giving border numbers removed  upper path. del.l numeric vector giving border numbers removed  lower path. add logical value indicating whether add new ring borders.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_modify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit ring borders visually — ring_modify","text":"matrix (grayscale image) array (color image) representing tree ring image.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_modify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Edit ring borders visually — ring_modify","text":"function used remove existing ring borders, add new  borders interactively clicking image segments. user creates one path (incline = FALSE), argument  del used remove ring borders. user creates two paths  (incline = TRUE), arguments del.u del.l used  remove ring borders. add = TRUE, graphics windows opened ring_detect activated sequentially. graphics window activated,  user can add new borders left-clicking mouse along path. Every click draws point representing ring border. Type vignette('detection-MtreeRing') see  example adding ring borders. identification process automatically stop . Windows system, identification process can terminated    pressing right mouse button selecting Stop menu. MacOS system, X11 device identification process    terminated pressing mouse button first,    quartz device process terminated pressing ESC key. user terminates identification process, current  graphics window closed automatically, graphics window following segment activated. graphics windows closed, ring_modify re-open graphics windows plot new borders. function can perform deletion addition one call. removal ring borders takes precedence addition.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_modify.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Edit ring borders visually — ring_modify","text":"Jingning Shi","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_modify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit ring borders visually — ring_modify","text":"","code":"img.path <- system.file(\"001.png\", package = \"MtreeRing\")  ## Read a tree ring image: t1 <- ring_read(img = img.path, dpi = 1200)  ## Split a long core sample into 3 pieces to ## get better display performance and use the ## watershed algorithm to detect ring borders: t2 <- ring_detect(ring.data = t1, seg = 3, method = 'watershed') #> Warning: The sampling year is set to the current year  ## Do not modify t2, but create a new array object t3.  ## Remove some borders without adding new borders: t3 <- ring_modify(ring.data = t2, del = c(1, 3, 5, 19:21), add = FALSE)"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and plot a tree-ring image file — ring_read","title":"Read and plot a tree-ring image file — ring_read","text":"function can read image file hard disk  plot newly-opened graphics device.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and plot a tree-ring image file — ring_read","text":"","code":"ring_read(img, dpi = NULL, RGB = c(0.299, 0.587, 0.114),   plot = FALSE, rotate = 0, magick = TRUE)"},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and plot a tree-ring image file — ring_read","text":"img character string indicating path image file.  Supported formats include png, tiff, jpg bmp. dpi integer specifying dpi image file. minimum  300 dpi required running automatic detection. RGB numeric vector length 3 giving weight RGB channels. plot logical value indicating whether plot tree ring image  reading . FALSE, image plotted function ring_detect pith_measure called. rotate integer specifying many degrees rotate (clockwise).  requires one following values: 0, 90, 180 270. magick logical value. TRUE, magick used read tree ring image. FALSE, packages png, jpg tiff used instead. See details .","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and plot a tree-ring image file — ring_read","text":"magick image object containing image data.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and plot a tree-ring image file — ring_read","text":"Proper image preparation great influence measurement  ring widths. tree-ring image contain irrelevant redundant  features, wooden mounts cores glued. larger file  size image, slower image processing operation . Pith side wood sample placed right side  graphics window. Use rotate change position. highly recommended use default value magick = TRUE,  magick can significantly reduce memory usage reading large file. image data stored non-standard format, image reading may fail. case can set magick = FALSE  avoid use magick.","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_read.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read and plot a tree-ring image file — ring_read","text":"Jingning Shi","code":""},{"path":"https://docs.ropensci.org/MtreeRing/reference/ring_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and plot a tree-ring image file — ring_read","text":"","code":"img.path <- system.file(\"001.png\", package = \"MtreeRing\")  ## Read and plot the image: t1 <- ring_read(img = img.path, dpi = 1200, plot = TRUE)"}]
